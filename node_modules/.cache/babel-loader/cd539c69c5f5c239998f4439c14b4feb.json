{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\todo-list-react-hooks-master\\\\todo-list-react-hooks-master\\\\src\\\\components\\\\Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport TodoCreator from \"./FormInput\";\nimport TodoList from \"./List\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000000'\n    }\n  }\n});\n\nconst Form = () => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState('');\n  const [todos, setTodos] = useState([{\n    text: \"Learn about React\",\n    isCompleted: false,\n    isEditing: false\n  }, {\n    text: \"Meet friend for lunch\",\n    isCompleted: false,\n    isEditing: false\n  }, {\n    text: \"Build really cool todo app\",\n    isCompleted: false,\n    isEditing: false\n  }]);\n  const inputRef = useRef();\n  const noteRef = useRef({});\n  const [isInputEmpty, setInputEmpty] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTodo(newTodo);\n    clearInput();\n    inputRef.current.focus();\n  };\n\n  const preventSubmit = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n    }\n  };\n\n  const addTodo = text => {\n    if (text !== '') {\n      const newTodos = [...todos, {\n        text\n      }];\n      setNewTodo('');\n      setTodos(newTodos);\n    } else {\n      console.log('text', text);\n      setInputEmpty(true);\n    }\n  };\n\n  const removeTodo = inx => {\n    const newArr = [...todos];\n    newArr.splice(inx, 1);\n    setTodos(newArr);\n  };\n\n  const completeTodo = inx => {\n    const newTodos = [...todos];\n    newTodos[inx].isCompleted = !newTodos[inx].isCompleted;\n    setTodos(newTodos);\n  };\n\n  const editTodo = inx => {\n    const newTodos = [...todos];\n    newTodos[inx].isEditing = !newTodos[inx].isEditing;\n    setTodos(newTodos);\n  };\n\n  const saveTodo = inx => {\n    const newTodos = [...todos];\n    newTodos[inx].isEditing = !newTodos[inx].isEditing;\n    newTodos[inx].text = noteRef.current[inx].value;\n    setTodos(newTodos);\n  };\n\n  const clearInput = () => {\n    setNewTodo('');\n  };\n\n  const setTodo = todo => {\n    setInputEmpty(false);\n    setNewTodo(todo);\n  };\n\n  useEffect(() => {}, [todos]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(TodoCreator, {\n      theme: theme,\n      todo: newTodo,\n      setTodo: setTodo,\n      clearInput: clearInput,\n      inputRef: inputRef,\n      isInputEmpty: isInputEmpty,\n      preventSubmit: preventSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      theme: theme,\n      todos: todos,\n      completeTodo: completeTodo,\n      editTodo: editTodo,\n      deleteTodo: removeTodo,\n      saveTodo: saveTodo,\n      noteRef: noteRef,\n      preventSubmit: preventSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Form, \"YVeoCaYS8d5P10MMhxQE4Vs7rng=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/todo-list-react-hooks-master/todo-list-react-hooks-master/src/components/Form.jsx"],"names":["React","useState","useEffect","useRef","TodoCreator","TodoList","createMuiTheme","theme","palette","primary","main","Form","newTodo","setNewTodo","todos","setTodos","text","isCompleted","isEditing","inputRef","noteRef","isInputEmpty","setInputEmpty","handleSubmit","e","preventDefault","addTodo","clearInput","current","focus","preventSubmit","key","newTodos","console","log","removeTodo","inx","newArr","splice","completeTodo","editTodo","saveTodo","value","setTodo","todo"],"mappings":"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","sourcesContent":["import  React, { useState, useEffect, useRef } from 'react';\nimport TodoCreator from \"./FormInput\";\nimport TodoList from \"./List\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\n\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: { main: '#000000' },\n    },\n});\n\nconst Form = () => {\n\n    const [ newTodo, setNewTodo ] = useState('');\n    const [ todos, setTodos ] = useState([\n        {\n            text: \"Learn about React\",\n            isCompleted: false,\n            isEditing: false\n        },\n        {\n            text: \"Meet friend for lunch\",\n            isCompleted: false,\n            isEditing: false\n        },\n        {\n            text: \"Build really cool todo app\",\n            isCompleted: false,\n            isEditing: false\n        }\n    ]);\n    const inputRef = useRef();\n    const noteRef = useRef({});\n    const [ isInputEmpty, setInputEmpty ] = useState(false)\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        addTodo(newTodo);\n        clearInput();\n        inputRef.current.focus();\n    };\n\n    const preventSubmit = e => {\n        if (e.key === 'Enter') {\n            e.preventDefault();\n        }\n    };\n\n    const addTodo = text => {\n        if ( text !== '') {\n            const newTodos = [...todos, { text }]\n            setNewTodo('')\n            setTodos(newTodos);\n        } else {\n            console.log('text', text)\n            setInputEmpty(true);\n        }\n    };\n\n    const removeTodo = inx => {\n        const newArr = [...todos]\n        newArr.splice(inx, 1)\n        setTodos(newArr)\n    }\n\n    const completeTodo = inx => {\n        const newTodos = [...todos];\n        newTodos[inx].isCompleted = !newTodos[inx].isCompleted;\n        setTodos(newTodos);\n    };\n\n    const editTodo = inx => {\n        const newTodos = [...todos];\n        newTodos[inx].isEditing = !newTodos[inx].isEditing;\n        setTodos(newTodos);\n    }\n\n    const saveTodo = (inx) => {\n        const newTodos = [...todos];\n        newTodos[inx].isEditing = !newTodos[inx].isEditing;\n        newTodos[inx].text = noteRef.current[inx].value;\n        setTodos(newTodos);\n    }\n\n    const clearInput = () => {\n        setNewTodo('');\n    }\n\n    const setTodo = todo => {\n        setInputEmpty(false);\n        setNewTodo(todo);\n    }\n\n    useEffect(() => {\n\n    }, [todos])\n\n    return (\n        <form onSubmit={handleSubmit} className=\"form\">\n\n                <TodoCreator\n                    theme={theme}\n                    todo={newTodo}\n                    setTodo={setTodo}\n                    clearInput={clearInput}\n                    inputRef={inputRef}\n                    isInputEmpty={isInputEmpty}\n                    preventSubmit={preventSubmit}\n                />\n\n                <TodoList\n                    theme={theme}\n                    todos={todos}\n                    completeTodo={completeTodo}\n                    editTodo={editTodo}\n                    deleteTodo={removeTodo}\n                    saveTodo={saveTodo}\n                    noteRef={noteRef}\n                    preventSubmit={preventSubmit}\n                />\n            </form>\n    )\n}\n\nexport default Form;"]},"metadata":{},"sourceType":"module"}