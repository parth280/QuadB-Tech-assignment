{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\todo-list-react-hooks-master\\\\todo-list-react-hooks-master\\\\src\\\\components\\\\FormInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nconst useStyles = makeStyles({\n  root: {\n    background: 'linear-gradient(45deg, gray 30%, black 90%)',\n    border: 0,\n    color: 'white',\n    height: 30,\n    padding: '0 10px',\n    whiteSpace: 'nowrap',\n    margin: '15px 0 0 20px'\n  },\n  label: {\n    width: '80%'\n  }\n});\n\nconst TodoCreator = ({\n  theme,\n  todo,\n  setTodo,\n  clearInput,\n  inputRef,\n  isInputEmpty,\n  preventSubmit\n}) => {\n  _s();\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form__input\",\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.label,\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          label: \"What need's to be done?\" // better accessibility with Material UI\n          ,\n          value: todo,\n          variant: \"outlined\",\n          onChange: e => setTodo(e.target.value),\n          onFocus: clearInput,\n          ref: inputRef,\n          \"aria-describedby\": \"component-error-text\",\n          onKeyPress: preventSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), !isInputEmpty ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            id: \"component-error-text\",\n            children: \"Task can't be empty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this)\n        }, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        alt: \"add-note\",\n        className: classes.root,\n        onKeyPress: preventSubmit,\n        children: \"Add task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoCreator, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoCreator;\nexport default TodoCreator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoCreator\");","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/todo-list-react-hooks-master/todo-list-react-hooks-master/src/components/FormInput.jsx"],"names":["React","Button","makeStyles","ThemeProvider","TextField","FormHelperText","FormControl","useStyles","root","background","border","color","height","padding","whiteSpace","margin","label","width","TodoCreator","theme","todo","setTodo","clearInput","inputRef","isInputEmpty","preventSubmit","classes","e","target","value"],"mappings":";;;;;;AAAA,OAAQA,KAAR,MAAmB,OAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,0BAA1C;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAC;AACzBM,EAAAA,IAAI,EAAE;AACFC,IAAAA,UAAU,EAAE,6CADV;AAEFC,IAAAA,MAAM,EAAE,CAFN;AAGFC,IAAAA,KAAK,EAAE,OAHL;AAIFC,IAAAA,MAAM,EAAE,EAJN;AAKFC,IAAAA,OAAO,EAAE,QALP;AAMFC,IAAAA,UAAU,EAAE,QANV;AAOFC,IAAAA,MAAM,EAAE;AAPN,GADmB;AAUzBC,EAAAA,KAAK,EAAE;AACHC,IAAAA,KAAK,EAAE;AADJ;AAVkB,CAAD,CAA5B;;AAgBA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA,UAAxB;AAAoCC,EAAAA,QAApC;AAA8CC,EAAAA,YAA9C;AAA4DC,EAAAA;AAA5D,CAAD,KAAiF;AAAA;;AACjG,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEY,KAAtB;AAAA,8BACI,QAAC,WAAD;AAAe,QAAA,SAAS,EAAEO,OAAO,CAACV,KAAlC;AAAA,gCACI,QAAC,SAAD;AACI,UAAA,EAAE,EAAC,gBADP;AAEI,UAAA,KAAK,EAAC,yBAFV,CAEoC;AAFpC;AAGI,UAAA,KAAK,EAAEI,IAHX;AAII,UAAA,OAAO,EAAC,UAJZ;AAKI,UAAA,QAAQ,EAAGO,CAAD,IAAON,OAAO,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAMI,UAAA,OAAO,EAAEP,UANb;AAOI,UAAA,GAAG,EAAEC,QAPT;AAQI,8BAAiB,sBARrB;AASI,UAAA,UAAU,EAAEE;AAThB;AAAA;AAAA;AAAA;AAAA,gBADJ,EAaM,CAACD,YAAD,gBACE,qCADF,gBAGE;AAAA,iCACI,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAC,sBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ,yBAhBR;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAsBI,QAAC,MAAD;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,GAAG,EAAC,UAFR;AAGI,QAAA,SAAS,EAAEE,OAAO,CAAClB,IAHvB;AAII,QAAA,UAAU,EAAEiB,aAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CAvCD;;GAAMP,W;UACcX,S;;;KADdW,W;AAyCN,eAAgBA,WAAhB","sourcesContent":["import  React from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport TextField from \"@material-ui/core/TextField\";\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles({\n    root: {\n        background: 'linear-gradient(45deg, gray 30%, black 90%)',\n        border: 0,\n        color: 'white',\n        height: 30,\n        padding: '0 10px',\n        whiteSpace: 'nowrap',\n        margin: '15px 0 0 20px',\n    },\n    label: {\n        width: '80%'\n    }\n});\n\n\nconst TodoCreator = ({ theme, todo, setTodo, clearInput, inputRef, isInputEmpty, preventSubmit }) => {\n    const classes = useStyles();\n\n    return (\n        <div className=\"form__input\">\n            <ThemeProvider theme={theme}>\n                <FormControl   className={classes.label}>\n                    <TextField\n                        id=\"outlined-basic\"\n                        label=\"What need's to be done?\" // better accessibility with Material UI\n                        value={todo}\n                        variant=\"outlined\"\n                        onChange={(e) => setTodo(e.target.value)}\n                        onFocus={clearInput}\n                        ref={inputRef}\n                        aria-describedby=\"component-error-text\"\n                        onKeyPress={preventSubmit}\n                    />\n\n                    { !isInputEmpty ?\n                        <></>\n                        :\n                        <>\n                            <FormHelperText id=\"component-error-text\">Task can't be empty</FormHelperText>\n                        </>\n                    }\n                </FormControl>\n                <Button\n                    type=\"submit\"\n                    alt=\"add-note\"\n                    className={classes.root}\n                    onKeyPress={preventSubmit}\n                >\n                    Add task\n                </Button>\n            </ThemeProvider>\n        </div>\n    )\n\n}\n\nexport  default TodoCreator;"]},"metadata":{},"sourceType":"module"}