{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Hp\\\\OneDrive\\\\Desktop\\\\todo-list-react-hooks-master\\\\todo-list-react-hooks-master\\\\src\\\\components\\\\List.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nconst useStyles = makeStyles(() => ({\n  root: {\n    width: '100%',\n    backgroundColor: '#f5f5f5',\n    padding: 0\n  },\n  li: {\n    borderBottom: '1px dashed black'\n  }\n}));\n\nconst TodoList = ({\n  theme,\n  todos,\n  completeTodo,\n  editTodo,\n  deleteTodo,\n  saveTodo,\n  noteRef,\n  preventSubmit\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState([0]);\n  let UniqKey = 123;\n\n  const handleToggle = (value, inx) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    completeTodo(inx);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(List, {\n      className: classes.root,\n      children: todos.map((todo, inx) => {\n        const labelId = `list-todo-${todo}`;\n        return /*#__PURE__*/_jsxDEV(ListItem, {\n          role: undefined,\n          dense: true,\n          button: true,\n          className: classes.li,\n          children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n            children: /*#__PURE__*/_jsxDEV(Checkbox, {\n              color: \"primary\",\n              edge: \"start\",\n              checked: checked.indexOf(todo) !== -1,\n              tabIndex: -1,\n              disableRipple: true,\n              inputProps: {\n                'aria-labelledby': labelId\n              },\n              onClick: handleToggle(todo, inx),\n              onKeyPress: preventSubmit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), !todo.isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemText, {\n              id: labelId,\n              primary: `${todo.text}`,\n              style: {\n                textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                edge: \"end\",\n                \"aria-label\": \"edit\",\n                onClick: () => editTodo(inx),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"task\" // better accessibility with HTML\n              ,\n              className: \"visuallyhidden\",\n              children: todo.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form__edit-input\",\n              defaultValue: todo.text,\n              ref: element => noteRef.current[inx] = element,\n              onKeyPress: preventSubmit,\n              id: \"task\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => saveTodo(inx),\n                edge: \"end\",\n                \"aria-label\": \"delete\",\n                children: /*#__PURE__*/_jsxDEV(BookmarkIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => deleteTodo(inx),\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)]\n        }, `todo-${UniqKey++}`, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"0o+c9wVIlrEVOlS08q2btRlaiSQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["C:/Users/Hp/OneDrive/Desktop/todo-list-react-hooks-master/todo-list-react-hooks-master/src/components/List.jsx"],"names":["React","makeStyles","ThemeProvider","List","ListItem","ListItemIcon","ListItemSecondaryAction","ListItemText","Checkbox","IconButton","EditIcon","DeleteIcon","BookmarkIcon","useStyles","root","width","backgroundColor","padding","li","borderBottom","TodoList","theme","todos","completeTodo","editTodo","deleteTodo","saveTodo","noteRef","preventSubmit","classes","checked","setChecked","useState","UniqKey","handleToggle","value","inx","currentIndex","indexOf","newChecked","push","splice","map","todo","labelId","undefined","isEditing","text","textDecoration","isCompleted","element","current"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles, ThemeProvider } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\n\nconst useStyles = makeStyles(() => ({\n    root: {\n        width: '100%',\n        backgroundColor: '#f5f5f5',\n        padding: 0\n    },\n    li: {\n        borderBottom: '1px dashed black'\n    }\n}));\n\nconst TodoList = ({ theme, todos, completeTodo, editTodo, deleteTodo, saveTodo, noteRef, preventSubmit }) => {\n    const classes = useStyles();\n    const [checked, setChecked] = React.useState([0]);\n    let UniqKey = 123;\n\n\n    const handleToggle = (value, inx) => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n\n        setChecked(newChecked);\n        completeTodo(inx);\n    };\n\n\n    return (\n        <ThemeProvider theme={theme}>\n            <List className={classes.root}>\n            {todos.map((todo, inx) => {\n                const labelId = `list-todo-${todo}`;\n\n                return (\n                    <ListItem\n                        key={`todo-${UniqKey++}`}\n                        role={undefined}\n                        dense\n                        button\n                        className={classes.li}\n                    >\n                        <ListItemIcon>\n                            <Checkbox\n                                color=\"primary\"\n                                edge=\"start\"\n                                checked={checked.indexOf(todo) !== -1}\n                                tabIndex={-1}\n                                disableRipple\n                                inputProps={{ 'aria-labelledby': labelId }}\n                                onClick={handleToggle(todo, inx)}\n                                onKeyPress={preventSubmit}\n                            />\n                        </ListItemIcon>\n                        {\n                            (!todo.isEditing) ?\n                                <>\n                                    <ListItemText\n                                        id={labelId}\n                                        primary={`${todo.text}`}\n                                        style={{textDecoration: todo.isCompleted ? \"line-through\" : \"\"}}\n                                    />\n                                    <ListItemIcon>\n                                        <IconButton\n                                            edge=\"end\"\n                                            aria-label=\"edit\"\n                                            onClick={() => editTodo(inx)}\n                                        >\n                                            <EditIcon/>\n                                        </IconButton>\n                                    </ListItemIcon>\n                                </>\n                                :\n                                <>\n                                    <label\n                                        htmlFor=\"task\" // better accessibility with HTML\n                                        className=\"visuallyhidden\"\n                                    >\n                                        {todo.text}\n                                    </label>\n                                    <input\n                                        className=\"form__edit-input\"\n                                        defaultValue={todo.text}\n                                        ref={(element) => noteRef.current[inx] = element}\n                                        onKeyPress={preventSubmit}\n                                        id=\"task\"\n                                    />\n                                    <ListItemIcon>\n                                        <IconButton onClick={() => saveTodo(inx)} edge=\"end\" aria-label=\"delete\">\n                                            <BookmarkIcon />\n                                        </IconButton>\n                                    </ListItemIcon>\n                                </>\n                        }\n                        <ListItemSecondaryAction>\n                            <IconButton onClick={() => deleteTodo(inx)} edge=\"end\" aria-label=\"delete\">\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                );\n            })}\n        </List>\n        </ThemeProvider>\n    );\n}\n\nexport default TodoList;\n"]},"metadata":{},"sourceType":"module"}